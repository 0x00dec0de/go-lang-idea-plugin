GO_FILE
  PsiComment(GO_LINE_COMMENT)('// Copyright 2009 The Go Authors. All rights reserved.')
  PsiComment(GO_LINE_COMMENT)('// Use of this source code is governed by a BSD-style')
  PsiComment(GO_LINE_COMMENT)('// license that can be found in the LICENSE file.')
  PsiComment(GO_LINE_COMMENT)('// HTTP server.  See RFC 2616.')
  PACKAGE_CLAUSE
    PsiElement(package)('package')
    PsiElement(identifier)('http')
  IMPORT_LIST
    <empty list>
  METHOD_DECLARATION
    PsiElement(func)('func')
    RECEIVER
      PsiElement(()('(')
      PsiElement(identifier)('sh')
      TYPE
        TYPE_REFERENCE_EXPRESSION
          PsiElement(identifier)('serverHandler')
      PsiElement())(')')
    PsiElement(identifier)('ServeHTTP')
    SIGNATURE
      PARAMETERS
        PsiElement(()('(')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('rw')
          TYPE
            TYPE_REFERENCE_EXPRESSION
              PsiElement(identifier)('ResponseWriter')
        PsiElement(,)(',')
        PARAMETER_DECLARATION
          PARAM_DEFINITION
            PsiElement(identifier)('req')
          POINTER_TYPE
            PsiElement(*)('*')
            TYPE
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('Request')
        PsiElement())(')')
    BLOCK
      PsiElement({)('{')
      FOR_STATEMENT
        PsiElement(for)('for')
        BLOCK
          PsiElement({)('{')
          SIMPLE_STATEMENT
            SHORT_VAR_DECLARATION
              VAR_DEFINITION
                PsiElement(identifier)('w')
              PsiElement(,)(',')
              VAR_DEFINITION
                PsiElement(identifier)('err')
              PsiElement(:=)(':=')
              CALL_EXPR
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('c')
                  PsiElement(.)('.')
                  PsiElement(identifier)('readRequest')
                ARGUMENT_LIST
                  PsiElement(()('(')
                  PsiElement())(')')
          PsiElement(})('}')
      FOR_STATEMENT
        PsiElement(for)('for')
        CONDITIONAL_EXPR
          CALL_EXPR
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                PsiElement(identifier)('atomic')
              PsiElement(.)('.')
              PsiElement(identifier)('LoadUint32')
            ARGUMENT_LIST
              PsiElement(()('(')
              UNARY_EXPR
                PsiElement(&)('&')
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('x')
              PsiElement())(')')
          PsiElement(!=)('!=')
          REFERENCE_EXPRESSION
            PsiElement(identifier)('expected')
        BLOCK
          PsiElement({)('{')
          PsiElement(})('}')
      FOR_STATEMENT
        PsiElement(for)('for')
        FOR_CLAUSE
          PsiElement(;)(';')
          PsiElement(;)(';')
          SEND_STATEMENT
            REFERENCE_EXPRESSION
              PsiElement(identifier)('c')
            PsiElement(<-)('<-')
            UNARY_EXPR
              PsiElement(*)('*')
              INDEX_OR_SLICE_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('a')
                PsiElement([)('[')
                SELECTOR_EXPR
                  COMPOSITE_LIT
                    TYPE_REFERENCE_EXPRESSION
                      PsiElement(identifier)('S')
                    LITERAL_VALUE
                      PsiElement({)('{')
                      PsiElement(})('}')
                  PsiElement(.)('.')
                  REFERENCE_EXPRESSION
                    PsiElement(identifier)('i')
                PsiElement(])(']')
        BLOCK
          PsiElement({)('{')
          IF_STATEMENT
            PsiElement(if)('if')
            SIMPLE_STATEMENT
              CONDITIONAL_EXPR
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('t')
                PsiElement(!=)('!=')
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('nil')
            BLOCK
              PsiElement({)('{')
              BREAK_STATEMENT
                PsiElement(break)('break')
              PsiElement(})('}')
          PsiElement(})('}')
      IF_STATEMENT
        PsiElement(if)('if')
        SIMPLE_STATEMENT
          AND_EXPR
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('req')
                PsiElement(.)('.')
                PsiElement(identifier)('RequestURI')
              PsiElement(==)('==')
              STRING_LITERAL
                PsiElement(string)('"*"')
            PsiElement(&&)('&&')
            CONDITIONAL_EXPR
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  PsiElement(identifier)('req')
                PsiElement(.)('.')
                PsiElement(identifier)('Method')
              PsiElement(==)('==')
              STRING_LITERAL
                PsiElement(string)('"OPTIONS"')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            REFERENCE_EXPRESSION
              PsiElement(identifier)('handler')
            ASSIGN_OP
              PsiElement(=)('=')
            COMPOSITE_LIT
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('globalOptionsHandler')
              LITERAL_VALUE
                PsiElement({)('{')
                PsiElement(})('}')
          PsiElement(})('}')
      FOR_STATEMENT
        PsiElement(for)('for')
        BLOCK
          PsiElement({)('{')
          ASSIGNMENT_STATEMENT
            REFERENCE_EXPRESSION
              PsiElement(identifier)('handler')
            ASSIGN_OP
              PsiElement(=)('=')
            COMPOSITE_LIT
              TYPE_REFERENCE_EXPRESSION
                PsiElement(identifier)('globalOptionsHandler')
              LITERAL_VALUE
                PsiElement({)('{')
                PsiElement(})('}')
          PsiElement(})('}')
      PsiElement(})('}')