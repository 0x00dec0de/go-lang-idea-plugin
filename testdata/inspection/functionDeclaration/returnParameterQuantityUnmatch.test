package main

func Ok1() (n int) {
    return
}

func Ok2() (n, _ int) {
    return
}

func Ok3() (a, b int) {
    return
}

func Ok4() (int, int) {
    go func() int {
            for i := 0; i < 10; i++ {
                return 5
            }
            return 3
        }()
    return 1, 2
}


func NotEnough1() int {
    <begin>return
<end.Not enough arguments to return>
}

func NotEnough2(a int) (b, c int) {
    if a == 1 {
        return
    } else if a == 2 {
        <begin>return 1
<end.Not enough arguments to return>
    } else if a == 3 {
        return 1, 2
    }
    <begin>return 3, 4, 5
<end.Too many arguments to return>
}

func NotEnough3(a int) (int, int) {
    if a == 1 {
        <begin>return
<end.Not enough arguments to return>
    } else if a == 2 {
        <begin>return 1
<end.Not enough arguments to return>
    } else if a == 3 {
        return 1, 2
    }
    <begin>return 3, 4, 5
<end.Too many arguments to return>
}