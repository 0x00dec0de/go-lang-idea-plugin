package main
var e = struct{a int; b int}{a:10, b:10}
-----
Go file
  PackageDeclaration(main)
    PsiElement(KEYWORD_PACKAGE)('package')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('main')
  PsiElement(WS_NEW_LINES)('\n')
  VarDeclarations
    PsiElement(KEYWORD_VAR)('var')
    PsiWhiteSpace(' ')
    VarSpec
      Identifiers
        PsiElement(IDENTIFIER)('e')
      PsiWhiteSpace(' ')
      PsiElement(=)('=')
      PsiWhiteSpace(' ')
      CompositeLiteral
        TypeStruct
          PsiElement(KEYWORD_STRUCT)('struct')
          PsiElement({)('{')
          TypeStruct field
            Identifiers
              PsiElement(IDENTIFIER)('a')
            PsiWhiteSpace(' ')
            TypeName
              PsiElement(IDENTIFIER)('int')
          PsiElement(;)(';')
          PsiWhiteSpace(' ')
          TypeStruct field
            Identifiers
              PsiElement(IDENTIFIER)('b')
            PsiWhiteSpace(' ')
            TypeName
              PsiElement(IDENTIFIER)('int')
          PsiElement(})('}')
        CompositeLiteralElementList
          PsiElement({)('{')
          CompositeLiteralElement
            CompositeLiteralElementKey
              LiteralExpr
                Identifier
                  PsiElement(IDENTIFIER)('a')
            PsiElement(:)(':')
            CompositeLiteralElementValue
              LiteralExpr
                PsiElement(LITERAL_INT)('10')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          CompositeLiteralElement
            CompositeLiteralElementKey
              LiteralExpr
                Identifier
                  PsiElement(IDENTIFIER)('b')
            PsiElement(:)(':')
            CompositeLiteralElementValue
              LiteralExpr
                PsiElement(LITERAL_INT)('10')
          PsiElement(})('}')