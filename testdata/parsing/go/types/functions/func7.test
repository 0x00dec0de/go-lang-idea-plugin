package main
type f func(a, b int, z float, opt ...interface{}) (success bool)
-----
Go file
  PackageDeclaration(main)
    PsiElement(KEYWORD_PACKAGE)('package')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('main')
  PsiElement(WS_NEW_LINES)('\n')
  TypeDeclarationsImpl
    PsiElement(KEYWORD_TYPE)('type')
    PsiWhiteSpace(' ')
    TypeSpecImpl
      NamedType(f)
        PsiElement(IDENTIFIER)('f')
      PsiWhiteSpace(' ')
      TypeFunction
        PsiElement(KEYWORD_FUNC)('func')
        PsiElement(()('(')
        FunctionParameterList
          FunctionParameterImpl
            IdentifierImpl
              PsiElement(IDENTIFIER)('a')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            IdentifierImpl
              PsiElement(IDENTIFIER)('b')
            PsiWhiteSpace(' ')
            TypeName
              PsiElement(IDENTIFIER)('int')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          FunctionParameterImpl
            IdentifierImpl
              PsiElement(IDENTIFIER)('z')
            PsiWhiteSpace(' ')
            TypeName
              PsiElement(IDENTIFIER)('float')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          FunctionParameterVariadicImpl
            IdentifierImpl
              PsiElement(IDENTIFIER)('opt')
            PsiWhiteSpace(' ')
            PsiElement(...)('...')
            TypeInterfaceImpl
              PsiElement(KEYWORD_INTERFACE)('interface')
              PsiElement({)('{')
              PsiElement(})('}')
        PsiElement())(')')
        PsiWhiteSpace(' ')
        FunctionResult
          PsiElement(()('(')
          FunctionParameterList
            FunctionParameterImpl
              IdentifierImpl
                PsiElement(IDENTIFIER)('success')
              PsiWhiteSpace(' ')
              TypeName
                PsiElement(IDENTIFIER)('bool')
          PsiElement())(')')

