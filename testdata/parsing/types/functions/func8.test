package main
type f func(int, int, float) (float, *[]int)
-----
Go file
  PackageDeclaration(main)
    PsiElement(KEYWORD_PACKAGE)('package')
    PsiWhiteSpace(' ')
    PsiElement(IDENTIFIER)('main')
  PsiWhiteSpace('\n')
  TypeDeclarationsImpl
    PsiElement(KEYWORD_TYPE)('type')
    PsiWhiteSpace(' ')
    TypeSpecImpl
      TypeNameDeclaration(f)
        PsiElement(IDENTIFIER)('f')
      PsiWhiteSpace(' ')
      TypeFunctionImpl
        PsiElement(KEYWORD_FUNC)('func')
        PsiElement(()('(')
        FunctionParameterListImpl
          FunctionParameterImpl
            TypeNameImpl
              LiteralIdentifierImpl
                PsiElement(IDENTIFIER)('int')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          FunctionParameterImpl
            TypeNameImpl
              LiteralIdentifierImpl
                PsiElement(IDENTIFIER)('int')
          PsiElement(,)(',')
          PsiWhiteSpace(' ')
          FunctionParameterImpl
            TypeNameImpl
              LiteralIdentifierImpl
                PsiElement(IDENTIFIER)('float')
        PsiElement())(')')
        PsiWhiteSpace(' ')
        FunctionResult
          PsiElement(()('(')
          FunctionParameterListImpl
            FunctionParameterImpl
              TypeNameImpl
                LiteralIdentifierImpl
                  PsiElement(IDENTIFIER)('float')
            PsiElement(,)(',')
            PsiWhiteSpace(' ')
            FunctionParameterImpl
              TypePointerImpl
                PsiElement(*)('*')
                TypeSliceImpl
                  PsiElement([)('[')
                  PsiElement(])(']')
                  TypeNameImpl
                    LiteralIdentifierImpl
                      PsiElement(IDENTIFIER)('int')
          PsiElement())(')')

